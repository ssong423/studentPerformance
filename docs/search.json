[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Student Performance",
    "section": "",
    "text": "1 Introduction\nThis dataset, titled Student Performance, provides a comprehensive view of student achievement across two core subjects: Mathematics and Portuguese. It includes a diverse range of features, such as demographic, social, and school-related variables, with grades from different assessment periods. By analyzing this dataset, We aim to uncover patterns and relationships that contribute to academic success, which could inform data-driven interventions in education. Understanding these factors is crucial for educators and policymakers to identify areas for support, which will ultimately enhancing student achievement. Key questions include: How do parental education levels affect student outcomes? What impact do extracurricular activities and study habits have on performance? Additionally, the dataset allows for predictive modeling, offering valuable insights into final grade predictions based on prior performance and other influencing factors. This analysais not only deepens our understanding of real-world applications of data science in education but also highlights the potential of data-driven strategies to improve learning outcomes.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description\nFor this project, we use the Student Performance Dataset from the UCI Machine Learning Repository. This dataset was collected by Paulo Cortez and Alice Silva from the University of Minho. It contains data on secondary school students from two Portuguese schools, providing attributes such as demographic, social, and academic performance information. The dataset includes two separate files for performance in Mathematics (student-mat.csv) and Portuguese language (student-por.csv). This time, we just use student-por.csv for the project.\nThe data is stored in CSV format, making it easy to process with tool R. It includes 30 attributes for each student, such as gender, age, family background, and academic grades. The datasets have dimensions of 649 rows for Portuguese language. The data is static and does not undergo updates, as it was collected for a specific research study in 2008.\nPotential issues with the data include: Imbalanced attributes, such as few students in certain categories (e.g., higher education aspirations). Missing values, although these are not explicitly documented, will require investigation. Correlation among features, such as multiple related attributes about family and study time.\nWe imported the data using the RStudio by downloading the CSV files directly from the UCI Machine Learning repository.\nLink for the dataset: https://archive.ics.uci.edu/dataset/320/student+performance",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\nWe check missing values using:\nA missing values heatmap that shows the distribution of missing data across columns.\n\n\nCode\nsuppressPackageStartupMessages(library(tidyverse))\nlibrary(ggplot2)\nlibrary(naniar)\n\nmissing_values &lt;- data %&gt;%\n  summarise(across(everything(), ~ sum(is.na(.)))) %&gt;%\n  pivot_longer(cols = everything(), names_to = \"Variable\", values_to = \"Missing_Count\")\n\nprint(missing_values)\n\n\n# A tibble: 33 × 2\n   Variable Missing_Count\n   &lt;chr&gt;            &lt;int&gt;\n 1 school               0\n 2 sex                  0\n 3 age                  0\n 4 address              0\n 5 famsize              0\n 6 Pstatus              0\n 7 Medu                 0\n 8 Fedu                 0\n 9 Mjob                 0\n10 Fjob                 0\n# ℹ 23 more rows\n\n\nCode\nvis_miss(data) +\n  theme_minimal() + \n  labs(title = \"Missing Data Heatmap (Rows and Columns)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 0))\n\n\n\n\n\n\n\n\n\nThe dataset is complete with no missing values, which simplifies preprocessing. However, we will monitor data consistency and outliers in subsequent analyses.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "Code\nlibrary(GGally)\n\n\nLoading required package: ggplot2\n\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\n\nCode\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(readr)\n\n\ndata &lt;- read_delim(\"student-por.csv\", delim = \";\", col_names = TRUE, show_col_types = FALSE)\n\n\nnumeric_columns &lt;- sapply(data, is.numeric)\n\ndata[, c(3, 7, 8, 13, 14, 15, 24:33)] &lt;- scale(data[, c(3, 7, 8, 13, 14, 15, 24:33)])\n\nsummarized_data &lt;- data %&gt;%\n  group_by(reason) %&gt;%\n  summarize(across(where(is.numeric), mean))\n\n# Ensure categorical variables are factors\ndata$reason &lt;- as.factor(data$reason)\n\nggparcoord(\n    data = data,\n    columns = c(3, 7, 8, 13, 14, 15, 24:33),  \n    groupColumn = \"reason\",                 \n    scale = \"globalminmax\",                  \n    title = \"Parallel Coordinate Plot for Student Data\"\n) +\ntheme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(GGally)\nlibrary(dplyr)\nlibrary(readr)\n\n\ndata &lt;- read_delim(\"student-por.csv\", delim = \";\", col_names = TRUE, show_col_types = FALSE)\n# scale the data or not\n#data[, c(3, 7, 8, 13, 14, 15, 24:33)] &lt;- scale(data[, c(3, 7, 8, 13, 14, 15, 24:33)])\n\nsummarized_data &lt;- data %&gt;%\n    group_by(reason) %&gt;%\n    summarize(across(where(is.numeric), mean))\n\nggparcoord(\n    data = summarized_data,\n    columns = 2:ncol(summarized_data),  \n    groupColumn = 1,                   \n    scale = \"globalminmax\",\n    alphaLines = 0.5\n) +\n    theme_minimal() +\n    theme(\n        axis.text.x = element_text(angle = 45, hjust = 1), \n        plot.margin = margin(10, 20, 10, 20)               \n    )\n\n\n\n\n\n\n\n\n\nThis parallel coordinate plot highlights group-level differences based on the reason for school choice. The reputation group consistently performs better academically (higher grades in G1, G2, G3) and has higher parental education levels (Medu, Fedu), suggesting a stronger academic focus and support system. In contrast, the other group tends to underperform in grades, indicating potential challenges or differing motivations. Behavioral variables like Dalc (weekday alcohol consumption) and Walc (weekend alcohol consumption) show little variation across groups, while the home group demonstrates slightly better health and lower absences, possibly due to proximity benefits. These patterns suggest a need for tailored support for underperforming groups like other.\n\n\nCode\nlibrary(vcd)\n\n\nLoading required package: grid\n\n\nCode\n# Subset your categorical columns\ncategorical_data &lt;- data[, c(2, 16:23)]\n\n# Ensure all categorical columns are factors\ncategorical_data[] &lt;- lapply(categorical_data, as.factor)\n\n# Create a contingency table\ndata_table &lt;- table(categorical_data)\n\npar(cex = 0.1, mar = c(5, 5, 5, 5))  # Adjust text scaling and margins\n\n# Create a mosaic pairs plot\npairs(data_table, highlighting = 2)\n\n\n\n\n\n\n\n\n\nThis mosaic plot highlights the distribution and relationships among categorical variables, showing dominant categories such as more females (F), prevalent yes responses for variables like higher, internet, and romantic, and notable imbalances in categories like schoolsup and famsup. Pairwise associations, such as students with nursery = yes often having higher = yes, provide insights into potential dependencies.\n\n\nCode\nlibrary(vcd)\nlibrary(dplyr)\nlibrary(forcats)\nlibrary(RColorBrewer)\n\ndata$G3_group &lt;- case_when(\n  data$G3 &gt;= 15 ~ \"High\",\n  data$G3 &gt;= 10 ~ \"Medium\",\n  TRUE ~ \"Low\"\n)\ndata$G3_group &lt;- as.factor(data$G3_group)\n\npalette &lt;- brewer.pal(n = length(levels(data$G3_group)), name = \"Set3\")\n\nvcd::mosaic(G3_group ~ famsup + higher + schoolsup, \n            data, \n            direction = c(\"v\", \"v\", \"v\", \"h\"),\n            highlighting_fill = palette,\n            main = \"Mosaic Plot of G3 Grade Group by Family Support and Higher Education\"\n            )\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(scales) # For a more aesthetic color palette\n\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\nCode\n# Convert the data to long format\ndata_long &lt;- data %&gt;%\n  pivot_longer(cols = c(G1, G2, G3), names_to = \"GradeType\", values_to = \"GradeValue\")\n\n# Plot with modifications\nggplot(data_long, aes(x = GradeValue, fill = GradeType, color = GradeType)) +\n  #geom_histogram(aes(y = ..density..), position = \"identity\", alpha = 0.3, bins = 10) + # Use density\n  geom_density(alpha = 0.3, size = 0.8) + # Overlay density curves\n  facet_wrap(~ guardian, scales = \"free\") + # Facet by guardian\n  labs(\n    title = \"Distribution of G1, G2, and G3 by Guardian\",\n    x = \"Grade Value\",\n    y = \"Density\"\n  ) +\n  scale_fill_manual(values = c(\"steelblue\", \"pink\", \"darkseagreen\")) + # Adjust fill colors\n  scale_color_manual(values = c(\"steelblue\", \"pink\", \"darkseagreen\")) + # Adjust line colors\n  theme_minimal() +\n  theme(\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10),\n    strip.text = element_text(size = 12) # Adjust facet labels size\n  )\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nThis density plot, faceted by guardian type, shows the progression of grades (G1, G2, G3) with consistent improvement from G1 to G3 across all guardians. The “father” and “mother” categories display tightly grouped distributions with peaks in the middle-to-high range, while the “other” category shows greater variability in G3 grades. This suggests a potential relationship between guardian type and grade progression, with G3 consistently achieving higher densities across all groups.\n\n\nCode\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(ggfortify)\nlibrary(dplyr)\n\n# Prepare data by removing G1, G2, and G3 and ensure only numeric variables are used\npca_data &lt;- data[, !(names(data) %in% c(\"G1\", \"G2\", \"G3\"))]\npca_data &lt;- pca_data[sapply(pca_data, is.numeric)]  # Keep only numeric columns\n\n# Perform PCA\npca_result &lt;- prcomp(pca_data, center = TRUE, scale. = TRUE)\n\n# Add G3 group labels (Low, Medium, High)\ndata$G3_group &lt;- factor(ifelse(data$G3 &gt;= 15, \"High\",\n                               ifelse(data$G3 &gt;= 10, \"Medium\", \"Low\")))\n\n# Prepare PCA results for plotting\npca_plot_data &lt;- data.frame(pca_result$x, G3_group = data$G3_group)\n\n# Aggregate to get one point for each group\naggregated_data &lt;- pca_plot_data %&gt;%\n  group_by(G3_group) %&gt;%\n  summarize(PC1 = mean(PC1), PC2 = mean(PC2))\n\n# Create the biplot\nggplot(aggregated_data, aes(x = PC1, y = PC2, color = G3_group)) +\n  geom_point(size = 5, alpha = 0.8) +\n  geom_text(aes(label = G3_group), vjust = -1, size = 4) +\n  geom_segment(data = as.data.frame(pca_result$rotation), \n               aes(x = 0, y = 0, xend = PC1 * 2, yend = PC2 * 2),\n               arrow = arrow(length = unit(0.2, \"cm\")), color = \"blue\") +\n  geom_text(data = as.data.frame(pca_result$rotation), \n            aes(x = PC1 * 2.2, y = PC2 * 2.2, label = rownames(pca_result$rotation)),\n            color = \"blue\", size = 4) +\n  labs(title = \"Biplot with G3 Grade Groups (Low, Medium, High)\",\n       x = \"PC 1 (Principal Component 1)\", \n       y = \"PC 2 (Principal Component 2)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThis PCA biplot effectively illustrates the relationships between variables and their influence on distinguishing G3 grade groups (Low, Medium, High). Key variables like studytime, Medu, and Fedu align with higher grades, while failures and age are associated with lower grades. The directions and proximities of arrows reveal correlations among variables, such as Walc and Dalc. The separation of G3 groups along PC1 highlights how these variables differentiate grade performance, making the plot a valuable tool for understanding underlying patterns.\n\n\nCode\nlibrary(dplyr)\nlibrary(ggalluvial)\n\n\ndata_grouped &lt;- data %&gt;%\n  select(G1, G2, G3) %&gt;%\n  mutate(\n    G1_group = case_when(\n      G1 &gt;= 15 ~ \"High\",\n      G1 &gt;= 10 ~ \"Medium\",\n      TRUE ~ \"Low\"\n    ),\n    G2_group = case_when(\n      G2 &gt;= 15 ~ \"High\",\n      G2 &gt;= 10 ~ \"Medium\",\n      TRUE ~ \"Low\"\n    ),\n    G3_group = case_when(\n      G3 &gt;= 15 ~ \"High\",\n      G3 &gt;= 10 ~ \"Medium\",\n      TRUE ~ \"Low\"\n    )\n  ) %&gt;%\n  select(G1_group, G2_group, G3_group)\n\nggplot(data_grouped, aes(axis1 = G1_group, axis2 = G2_group, axis3 = G3_group)) +\n  geom_alluvium(aes(fill = G3_group)) +\n  geom_stratum() +\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum))) +\n  scale_x_discrete(limits = c(\"G1\", \"G2\", \"G3\")) +\n  theme_minimal() +\n  labs(\n    title = \"The correlation between G1, G2 and G3 grades\",\n    x = \"Achievement stage\",\n    y = \"Number of students\",\n    fill = \"G3 Grades\"\n  )\n\n\nWarning in to_lodes_form(data = data, axes = axis_ind, discern =\nparams$discern): Some strata appear at multiple axes.\nWarning in to_lodes_form(data = data, axes = axis_ind, discern =\nparams$discern): Some strata appear at multiple axes.\nWarning in to_lodes_form(data = data, axes = axis_ind, discern =\nparams$discern): Some strata appear at multiple axes.\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(ggplot2)\nlibrary(ggridges)\n\ndata_Medu &lt;- data %&gt;%\n  mutate(\n    Medu = factor(Medu, labels = c(\"None\", \"Primary\", \"Middle\", \"Secondary\", \"Higher\"))\n  )\n\nggplot(data_Medu, aes(x = G3, y = Medu, fill = Medu)) +\n  geom_boxplot(alpha = 0.7, outlier.color = \"red\", outlier.shape = 16) +\n  scale_fill_manual(values = c(\"None\" = \"#D3D3D3\", \"Primary\" = \"#ADD8E6\", \n                               \"Middle\" = \"#87CEFA\", \"Secondary\" = \"#4682B4\", \"Higher\" = \"#000080\")) +\n  theme_minimal(base_size = 14) +\n  coord_flip() + \n  theme(\n    legend.position = \"none\", \n    axis.text.y = element_text(size = 12), \n    axis.text.x = element_text(size = 12)\n  ) +\n  labs(\n    title = \"Impact of Mother's Education Level on Final Grades\",\n    x = \"Final Grade (G3)\",\n    y = \"Mother's Education Level\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\ndata_famrel &lt;- data %&gt;%\n  mutate(\n    famrel = factor(famrel, labels = c(\"Very Poor\", \"Poor\", \"Average\", \"Good\", \"Very Good\"))\n  )\n\nggplot(data_famrel, aes(x = G3, y = famrel, fill = famrel)) +\n  geom_density_ridges(alpha = 0.8, scale = 1.5) + \n  scale_fill_viridis_d(option = \"D\") + \n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"none\",  \n    axis.text.y = element_text(size = 12),\n    axis.text.x = element_text(size = 12)\n  ) +\n  labs(\n    title = \"Distribution of Final Grades (G3) by Family Relationship\",\n    x = \"Final Grade (G3)\",\n    y = \"Family Relationship\",\n    fill = \"Family Relationship\"\n  )\n\n\nPicking joint bandwidth of 0.94\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(ggplot2)\n\nggplot(data, aes(x = absences, y = G3, color = sex)) +\n  geom_point(alpha = 0.7, size = 2) +\n  facet_wrap(~ failures, labeller = labeller(failures = c(\n    \"0\" = \"No Failures\",\n    \"1\" = \"1 Failure\",\n    \"2\" = \"2 Failures\",\n    \"3\" = \"3 Failures\",\n    \"4\" = \"4+ Failures\"\n  ))) +\n  theme_minimal(base_size = 14) +\n  labs(\n    title = \"Absences vs Final Grades by Failures and Gender\",\n    x = \"Absences\",\n    y = \"Final Grades (G3)\",\n    color = \"Gender\"\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(data, aes(x = G3)) +\n  geom_histogram(aes(y = ..density..), binwidth = 1, fill = \"skyblue\", color = \"black\", alpha = 0.7) +\n  geom_density(aes(color = sex), size = 1) + \n  scale_color_manual(values = c(\"F\" = \"royalblue\", \"M\" = \"red\"), name = \"Gender\") +\n  facet_wrap(~ health, labeller = labeller(health = c(\n    \"1\" = \"Very Poor\",\n    \"2\" = \"Poor\",\n    \"3\" = \"Average\",\n    \"4\" = \"Good\",\n    \"5\" = \"Very Good\"\n  ))) +\n  theme_minimal(base_size = 14) +\n  labs(\n    title = \"Distribution of Final Grades (G3) by Health Status\",\n    x = \"Final Grades (G3)\",\n    y = \"Density\",\n    subtitle = \"Faceted by Health Status\",\n    color = \"Gender\"\n  )\n\n\nWarning: The dot-dot notation (`..density..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(density)` instead.\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(jsonlite)\n\n# Load your dataset\n\n# Unique family relationship levels\nfamily_levels &lt;- unique(data$famrel)\n\n# Prepare a list to store results\ndensity_data &lt;- list()\n\nfor (level in family_levels) {\n  # Filter data for the current level\n  subset &lt;- data$G3[data$famrel == level]\n  \n  # Calculate density\n  density_result &lt;- density(subset, from = 0, to = 20) # Adjust range as needed\n  \n  # Store results\n  density_data[[level]] &lt;- list(\n    x = density_result$x,\n    y = density_result$y\n  )\n}\n\n# Save as JSON\nwrite(toJSON(density_data, pretty = TRUE), \"density_data.json\")\nprint(\"Density data saved to density_data.json\")\n\n\n[1] \"Density data saved to density_data.json\"",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4  Interactive graph",
    "section": "",
    "text": "4.1 How to Use the Interactive Graph\nThis interactive graph allows you to explore the distribution of final grades (G3) based on family relationship levels. Use the buttons below to navigate through different levels of family relationships. The graph will display the density of grades, with a red dashed line indicating the mean grade for the selected level.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "d3graph.html#key-insights-from-the-visualizatio",
    "href": "d3graph.html#key-insights-from-the-visualizatio",
    "title": "4  Interactive graph",
    "section": "4.2 Key Insights from the Visualizatio",
    "text": "4.2 Key Insights from the Visualizatio\nThis visualization reveals several noteworthy patterns. As the quality of family relationships improves, there is a clear shift in the distribution of final grades toward higher values. For example, students with “Very Good” family relationships exhibit higher final grades compared to those with “Very Poor” relationships. The peak of the distribution for “Very Poor” relationships is concentrated around lower grades, whereas the peak for “Very Good” relationships is centered on higher grades. This suggests a positive association between strong family relationships and better academic performance. Additionally, the varying shapes and spreads of the distributions reflect the level of grade variability within each family relationship category. Broader distributions indicate greater diversity in academic outcomes. These findings emphasize the potential role of familial support in influencing students’ academic success, underscoring the importance of a supportive home environment in shaping educational outcomes.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Interactive graph</span>"
    ]
  }
]